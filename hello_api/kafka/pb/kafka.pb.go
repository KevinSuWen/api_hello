package kafka100

import "github.com/golang/protobuf/proto"

//上线扩展类型定义
type ONLINE_EXT_TYPE int32

const (
	ONLINE_EXT_TYPE_UNKNOWN ONLINE_EXT_TYPE = 0
	ONLINE_EXT_TYPE_DATAMGR ONLINE_EXT_TYPE = 1
	ONLINE_EXT_TYPE_SIGNAL  ONLINE_EXT_TYPE = 2
	ONLINE_EXT_TYPE_POWER   ONLINE_EXT_TYPE = 3
	ONLINE_EXT_TYPE_SCREEN  ONLINE_EXT_TYPE = 4
	ONLINE_EXT_TYPE_CAMERA  ONLINE_EXT_TYPE = 5
	ONLINE_EXT_TYPE_GATEWAY ONLINE_EXT_TYPE = 6
	ONLINE_EXT_TYPE_EAGDEV  ONLINE_EXT_TYPE = 7
)

//2.1公共头数据
type PushData struct {
	Version              int32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	RecvTime             uint64   `protobuf:"varint,2,opt,name=recvTime,proto3" json:"recvTime,omitempty"`
	DataType             int32    `protobuf:"varint,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushData) Reset()         { *m = PushData{} }
func (m *PushData) String() string { return proto.CompactTextString(m) }
func (*PushData) ProtoMessage()    {}
func (*PushData) Descriptor() ([]byte, []int) {
	return fileDescriptor_68928ed13de9fb92, []int{0}
}

func (m *PushData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushData.Unmarshal(m, b)
}
func (m *PushData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushData.Marshal(b, m, deterministic)
}
func (m *PushData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushData.Merge(m, src)
}
func (m *PushData) XXX_Size() int {
	return xxx_messageInfo_PushData.Size(m)
}
func (m *PushData) XXX_DiscardUnknown() {
	xxx_messageInfo_PushData.DiscardUnknown(m)
}

var xxx_messageInfo_PushData proto.InternalMessageInfo

func (m *PushData) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *PushData) GetRecvTime() uint64 {
	if m != nil {
		return m.RecvTime
	}
	return 0
}

func (m *PushData) GetDataType() int32 {
	if m != nil {
		return m.DataType
	}
	return 0
}

func (m *PushData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}
//2.2.1设备上线
type DeviceOnline struct {
	LiftId               string   `protobuf:"bytes,1,opt,name=liftId,proto3" json:"liftId,omitempty"`
	DeviceId             string   `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	DeviceType           uint32   `protobuf:"varint,3,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	DeviceIndex          uint32   `protobuf:"varint,4,opt,name=deviceIndex,proto3" json:"deviceIndex,omitempty"`
	Ip                   string   `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32   `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	ExtType              uint32   `protobuf:"varint,7,opt,name=extType,proto3" json:"extType,omitempty"`
	ExtInfo              []byte   `protobuf:"bytes,8,opt,name=extInfo,proto3" json:"extInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//Eag设备上线（流媒体链路）
//Eag设备上线（流媒体链路）
type EagDeviceOnline struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	DeviceType           uint32   `protobuf:"varint,2,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	Ip                   string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32   `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	ExtType              uint32   `protobuf:"varint,5,opt,name=extType,proto3" json:"extType,omitempty"`
	ExtInfo              []byte   `protobuf:"bytes,6,opt,name=extInfo,proto3" json:"extInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EagDeviceOnline) Reset()         { *m = EagDeviceOnline{} }
func (m *EagDeviceOnline) String() string { return proto.CompactTextString(m) }
func (*EagDeviceOnline) ProtoMessage()    {}
func (*EagDeviceOnline) Descriptor() ([]byte, []int) {
	return fileDescriptor_68928ed13de9fb92, []int{21}
}

func (m *EagDeviceOnline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EagDeviceOnline.Unmarshal(m, b)
}
func (m *EagDeviceOnline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EagDeviceOnline.Marshal(b, m, deterministic)
}
func (m *EagDeviceOnline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EagDeviceOnline.Merge(m, src)
}
func (m *EagDeviceOnline) XXX_Size() int {
	return xxx_messageInfo_EagDeviceOnline.Size(m)
}
func (m *EagDeviceOnline) XXX_DiscardUnknown() {
	xxx_messageInfo_EagDeviceOnline.DiscardUnknown(m)
}

var xxx_messageInfo_EagDeviceOnline proto.InternalMessageInfo

func (m *EagDeviceOnline) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *EagDeviceOnline) GetDeviceType() uint32 {
	if m != nil {
		return m.DeviceType
	}
	return 0
}

func (m *EagDeviceOnline) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *EagDeviceOnline) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *EagDeviceOnline) GetExtType() uint32 {
	if m != nil {
		return m.ExtType
	}
	return 0
}

func (m *EagDeviceOnline) GetExtInfo() []byte {
	if m != nil {
		return m.ExtInfo
	}
	return nil
}

//2.2.2设备下线
type DeviceOffline struct {
	LiftId               string   `protobuf:"bytes,1,opt,name=liftId,proto3" json:"liftId,omitempty"`
	DeviceId             string   `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

//Eag设备下线（流媒体链路）
type EagDeviceOffline struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EagDeviceOffline) Reset()         { *m = EagDeviceOffline{} }
func (m *EagDeviceOffline) String() string { return proto.CompactTextString(m) }
func (*EagDeviceOffline) ProtoMessage()    {}
func (*EagDeviceOffline) Descriptor() ([]byte, []int) {
	return fileDescriptor_68928ed13de9fb92, []int{23}
}

func (m *EagDeviceOffline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EagDeviceOffline.Unmarshal(m, b)
}
func (m *EagDeviceOffline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EagDeviceOffline.Marshal(b, m, deterministic)
}
func (m *EagDeviceOffline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EagDeviceOffline.Merge(m, src)
}
func (m *EagDeviceOffline) XXX_Size() int {
	return xxx_messageInfo_EagDeviceOffline.Size(m)
}
func (m *EagDeviceOffline) XXX_DiscardUnknown() {
	xxx_messageInfo_EagDeviceOffline.DiscardUnknown(m)
}

var xxx_messageInfo_EagDeviceOffline proto.InternalMessageInfo

func (m *EagDeviceOffline) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}


//摄像头在EAG上线扩展信息：
//extType：7
type CamEagOnlineExtInfo struct {
	FirmwareVersion      string   `protobuf:"bytes,1,opt,name=firmwareVersion,proto3" json:"firmwareVersion,omitempty"`
	Manufacture          uint32   `protobuf:"varint,2,opt,name=manufacture,proto3" json:"manufacture,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CamEagOnlineExtInfo) Reset()         { *m = CamEagOnlineExtInfo{} }
func (m *CamEagOnlineExtInfo) String() string { return proto.CompactTextString(m) }
func (*CamEagOnlineExtInfo) ProtoMessage()    {}
func (*CamEagOnlineExtInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_68928ed13de9fb92, []int{22}
}

func (m *CamEagOnlineExtInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CamEagOnlineExtInfo.Unmarshal(m, b)
}
func (m *CamEagOnlineExtInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CamEagOnlineExtInfo.Marshal(b, m, deterministic)
}
func (m *CamEagOnlineExtInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CamEagOnlineExtInfo.Merge(m, src)
}
func (m *CamEagOnlineExtInfo) XXX_Size() int {
	return xxx_messageInfo_CamEagOnlineExtInfo.Size(m)
}
func (m *CamEagOnlineExtInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CamEagOnlineExtInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CamEagOnlineExtInfo proto.InternalMessageInfo

func (m *CamEagOnlineExtInfo) GetFirmwareVersion() string {
	if m != nil {
		return m.FirmwareVersion
	}
	return ""
}

func (m *CamEagOnlineExtInfo) GetManufacture() uint32 {
	if m != nil {
		return m.Manufacture
	}
	return 0
}

var fileDescriptor_68928ed13de9fb92 = []byte{
	// 2477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0x4f, 0x6f, 0x23, 0x49,
	0x15, 0xa7, 0xfd, 0xdf, 0x2f, 0xb1, 0xe3, 0xed, 0xf1, 0x0e, 0x26, 0xbb, 0x1a, 0x82, 0x59, 0x86,
	0xd1, 0x0a, 0x0d, 0xf9, 0x37, 0x03, 0x5c, 0x90, 0xac, 0xc4, 0x13, 0x99, 0x4d, 0x32, 0x51, 0x3b,
	0x4c, 0x58, 0x38, 0x8c, 0x2a, 0xdd, 0x65, 0xbb, 0x95, 0x76, 0x77, 0x4f, 0x75, 0x77, 0x12, 0xaf,
	0x84, 0xb4, 0x7c, 0x00, 0x6e, 0x2b, 0xf8, 0x00, 0x68, 0x6f, 0x48, 0x5c, 0x38, 0xf0, 0x09, 0x10,
	0x9f, 0x01, 0x21, 0xf1, 0x01, 0x38, 0x71, 0xe2, 0x86, 0x50, 0xfd, 0xeb, 0xae, 0xea, 0xb6, 0xc3,
	0xec, 0x80, 0xb4, 0x87, 0x9d, 0x5b, 0xbd, 0x5f, 0xbd, 0x7a, 0xf5, 0xea, 0xd5, 0xef, 0x3d, 0x57,
	0x57, 0x19, 0xd6, 0xae, 0xd0, 0xe4, 0x0a, 0x3d, 0x0e, 0x49, 0x10, 0x07, 0x66, 0x83, 0x09, 0x3b,
	0xdb, 0xdb, 0xfd, 0x10, 0x1a, 0x67, 0x49, 0x34, 0x3b, 0x44, 0x31, 0x32, 0x7b, 0x50, 0xbf, 0xc6,
	0x24, 0x72, 0x03, 0xbf, 0x67, 0x6c, 0x19, 0x8f, 0xaa, 0x96, 0x14, 0xcd, 0x4d, 0x68, 0x10, 0x6c,
	0x5f, 0x9f, 0xbb, 0x73, 0xdc, 0x2b, 0x6d, 0x19, 0x8f, 0x2a, 0x56, 0x2a, 0xd3, 0x3e, 0x07, 0xc5,
	0xe8, 0x7c, 0x11, 0xe2, 0x5e, 0x99, 0x0d, 0x4b, 0x65, 0xd3, 0x84, 0x0a, 0x6d, 0xf7, 0x2a, 0x5b,
	0xc6, 0xa3, 0x75, 0x8b, 0xb5, 0xfb, 0x7f, 0x33, 0x60, 0xfd, 0x10, 0x5f, 0xbb, 0x36, 0x7e, 0xee,
	0x7b, 0xae, 0x8f, 0xcd, 0xfb, 0x50, 0xf3, 0xdc, 0x49, 0x3c, 0x72, 0xd8, 0xac, 0x4d, 0x4b, 0x48,
	0xcc, 0x30, 0xd3, 0x1b, 0x39, 0x6c, 0xd2, 0xa6, 0x95, 0xca, 0xe6, 0x03, 0x00, 0xde, 0x4e, 0xa7,
	0x6d, 0x59, 0x0a, 0x62, 0x6e, 0xc1, 0x9a, 0xd0, 0xf5, 0x1d, 0x7c, 0xcb, 0xe6, 0x6f, 0x59, 0x2a,
	0x64, 0xb6, 0xa1, 0xe4, 0x86, 0xbd, 0x2a, 0xb3, 0x5b, 0x72, 0x43, 0xea, 0x6a, 0x18, 0x90, 0xb8,
	0x57, 0x63, 0xaa, 0xac, 0x4d, 0x03, 0x82, 0x6f, 0x63, 0x36, 0x45, 0x9d, 0xc1, 0x52, 0x14, 0x3d,
	0x23, 0x7f, 0x12, 0xf4, 0x1a, 0x6c, 0x6d, 0x52, 0xec, 0xff, 0xde, 0x80, 0x2e, 0x8d, 0xe6, 0xc9,
	0x94, 0xf0, 0xf5, 0x0d, 0x79, 0x87, 0xf9, 0x10, 0xda, 0xb3, 0x20, 0x8a, 0x0f, 0x33, 0xb7, 0x0d,
	0x66, 0x33, 0x87, 0x9a, 0x8f, 0x60, 0x23, 0x43, 0xb8, 0xfb, 0x25, 0xa6, 0x98, 0x87, 0xe9, 0x22,
	0x67, 0x88, 0x38, 0x37, 0x88, 0xe0, 0x17, 0x98, 0x88, 0x28, 0xa8, 0x10, 0xd5, 0x88, 0x82, 0x49,
	0x7c, 0x21, 0x34, 0x44, 0x18, 0x14, 0xa8, 0xff, 0xab, 0x12, 0xdc, 0x1b, 0xbb, 0x53, 0x1f, 0x79,
	0xba, 0xb7, 0x39, 0xdb, 0xc6, 0x4a, 0xdb, 0x52, 0xa3, 0x94, 0xd9, 0x96, 0x1a, 0x9b, 0xd0, 0x98,
	0x23, 0x07, 0x33, 0xd6, 0x94, 0x39, 0x6b, 0xa4, 0x4c, 0x47, 0x4f, 0x90, 0x1d, 0x07, 0x64, 0x71,
	0x10, 0x38, 0x58, 0x7a, 0xa6, 0x40, 0x74, 0x8b, 0xed, 0x24, 0x8a, 0x83, 0x39, 0x53, 0xa8, 0xf2,
	0x2d, 0xce, 0x10, 0x1a, 0xa7, 0x39, 0xf2, 0x13, 0x3a, 0x24, 0x21, 0x98, 0x29, 0xf1, 0xbd, 0xcb,
	0xc3, 0x9c, 0x2c, 0x91, 0x3b, 0xf5, 0x99, 0x27, 0x75, 0xe6, 0x89, 0x82, 0xf4, 0x3f, 0x2d, 0x81,
	0x79, 0x16, 0xdc, 0x60, 0xf2, 0xd5, 0x0d, 0xc1, 0xef, 0x0c, 0xb8, 0x37, 0xb6, 0x09, 0xc6, 0xfe,
	0xff, 0x3f, 0x06, 0x7d, 0x58, 0x9f, 0x63, 0xc7, 0x45, 0x67, 0x1e, 0x5a, 0x64, 0x3c, 0xd5, 0x30,
	0xf3, 0x03, 0x68, 0x5d, 0xbb, 0x0e, 0x0e, 0x46, 0x7e, 0x8c, 0x49, 0x46, 0x55, 0x1d, 0xec, 0xff,
	0xda, 0x80, 0x7b, 0x07, 0x68, 0x8e, 0x09, 0x7a, 0x43, 0x2f, 0x2f, 0x8a, 0x5e, 0x0a, 0x28, 0xab,
	0x28, 0xa7, 0x48, 0xec, 0x55, 0xd3, 0x52, 0x10, 0x5a, 0x1f, 0x62, 0x1a, 0xbb, 0x0a, 0x8b, 0x1d,
	0x6b, 0xf7, 0x1d, 0xe8, 0x1e, 0xa1, 0x18, 0xdf, 0xa0, 0x85, 0xee, 0x4f, 0x17, 0xaa, 0x37, 0xc8,
	0x1f, 0x85, 0xa2, 0xa0, 0x71, 0xc1, 0x7c, 0x1f, 0x9a, 0x53, 0xae, 0x3d, 0x0a, 0x45, 0x41, 0xcb,
	0x00, 0xb5, 0xf8, 0xf2, 0x00, 0x49, 0xb1, 0x7f, 0x00, 0x2d, 0x51, 0x2f, 0x27, 0x93, 0x37, 0x2d,
	0x98, 0xfd, 0x17, 0xd0, 0x38, 0x9b, 0x05, 0x3e, 0x3e, 0x41, 0xb6, 0xa6, 0x67, 0xe4, 0x0a, 0xeb,
	0x26, 0x34, 0x42, 0xa1, 0x27, 0x6d, 0x48, 0x79, 0x69, 0x08, 0xfe, 0x65, 0x40, 0x73, 0xe0, 0x21,
	0x32, 0x67, 0xbf, 0x20, 0x77, 0x78, 0x86, 0xa8, 0xd2, 0x18, 0xbf, 0x12, 0xb1, 0x4f, 0x65, 0x1a,
	0x16, 0xd6, 0x56, 0x2a, 0x79, 0x06, 0x68, 0xbe, 0x56, 0x72, 0xbe, 0xde, 0x87, 0x5a, 0xc0, 0xe2,
	0x2e, 0x52, 0x43, 0x48, 0xd4, 0xe2, 0x0c, 0x45, 0x67, 0x98, 0x44, 0x81, 0x2f, 0x12, 0x22, 0x03,
	0xd2, 0x55, 0xd4, 0xb3, 0x55, 0xa8, 0x85, 0xbe, 0xb1, 0xb2, 0xd0, 0x37, 0xf5, 0x42, 0xff, 0x6f,
	0x03, 0x3a, 0x16, 0x8e, 0xe2, 0x80, 0xe0, 0xaf, 0x66, 0x00, 0x3e, 0x35, 0xc0, 0x1c, 0xa2, 0xe9,
	0x01, 0x9a, 0xb3, 0xf5, 0x4b, 0xf2, 0xf7, 0x61, 0x9d, 0x65, 0xed, 0xc1, 0x0c, 0xf9, 0x3e, 0xf6,
	0x44, 0x36, 0x6a, 0x18, 0xfd, 0x2d, 0x64, 0x2b, 0x1c, 0xf9, 0x52, 0x8b, 0x07, 0x25, 0x87, 0xb2,
	0xa4, 0x74, 0xa3, 0xab, 0xd3, 0x64, 0x7e, 0x99, 0x16, 0x0e, 0x05, 0xe9, 0xff, 0x18, 0xba, 0x3f,
	0x77, 0x78, 0x45, 0xd0, 0x7c, 0x78, 0x08, 0x6d, 0x82, 0xed, 0x80, 0x38, 0xcf, 0x5c, 0x8f, 0x27,
	0x34, 0xdf, 0x8e, 0x1c, 0xda, 0xff, 0x4b, 0x09, 0xda, 0xc7, 0xee, 0x24, 0x3e, 0x09, 0xae, 0xf1,
	0x38, 0x46, 0x71, 0x12, 0xbd, 0xd1, 0x69, 0xa4, 0x0f, 0xeb, 0x76, 0x42, 0x08, 0xf6, 0xe3, 0x67,
	0x5e, 0x10, 0x10, 0x71, 0x0c, 0xd2, 0x30, 0x5a, 0xe1, 0xe6, 0xc1, 0x35, 0x3e, 0x74, 0x09, 0xb6,
	0x63, 0x9a, 0xe5, 0xa2, 0xc2, 0x69, 0x20, 0x5d, 0xf0, 0xc4, 0x43, 0x31, 0xf7, 0x45, 0x56, 0xfc,
	0x0c, 0x61, 0x01, 0x09, 0x02, 0x22, 0xfa, 0x6b, 0x22, 0x20, 0x29, 0x42, 0x67, 0x89, 0x88, 0xad,
	0x9c, 0x31, 0xf8, 0xb9, 0x45, 0x07, 0x59, 0x35, 0x94, 0xc0, 0xc8, 0x61, 0x3b, 0xde, 0xb4, 0x54,
	0x88, 0x32, 0x68, 0xe2, 0x62, 0xcf, 0x39, 0x41, 0xd1, 0x15, 0xdb, 0xf7, 0x96, 0x95, 0x01, 0x29,
	0x83, 0x40, 0x29, 0x04, 0xff, 0x2c, 0xc1, 0x06, 0x0d, 0xe5, 0x78, 0x86, 0xae, 0xfe, 0x97, 0x58,
	0xfe, 0xb7, 0x93, 0x5d, 0x17, 0xaa, 0x51, 0x88, 0x31, 0x4f, 0x86, 0xaa, 0xc5, 0x05, 0xba, 0xee,
	0xdb, 0x81, 0x6d, 0x63, 0x0f, 0x13, 0xc4, 0xa2, 0x5b, 0x65, 0xbd, 0x3a, 0x48, 0xb5, 0x16, 0x9a,
	0x56, 0x8d, 0x6b, 0x2d, 0xf2, 0x5a, 0x9f, 0x68, 0x5a, 0x75, 0xae, 0xa5, 0x81, 0x74, 0x6d, 0xb7,
	0xe3, 0x1b, 0xd7, 0x9f, 0x8a, 0x84, 0x11, 0x12, 0xc5, 0x17, 0x1c, 0xe7, 0x61, 0x13, 0x12, 0xc5,
	0x3f, 0x19, 0xdf, 0xb8, 0x53, 0x9f, 0x45, 0xad, 0x65, 0x09, 0x89, 0x52, 0x35, 0xa2, 0x21, 0x7b,
	0x46, 0xf0, 0xab, 0x04, 0xfb, 0xf6, 0xa2, 0xb7, 0xc6, 0x53, 0x41, 0x47, 0xd3, 0x98, 0xaf, 0x2b,
	0x31, 0xff, 0xc3, 0xb7, 0x60, 0x9d, 0xc6, 0xdc, 0x92, 0xf4, 0xd8, 0x82, 0xb5, 0x10, 0xd9, 0x57,
	0x68, 0xca, 0x4f, 0x1c, 0x06, 0xd3, 0x55, 0x21, 0x65, 0x4b, 0x4a, 0xda, 0x96, 0x3c, 0x00, 0x98,
	0x62, 0x5f, 0xae, 0x58, 0x84, 0x3d, 0x43, 0xcc, 0x13, 0x68, 0x47, 0xec, 0x7c, 0x70, 0xb4, 0x27,
	0xc8, 0x47, 0xe3, 0xbf, 0xb6, 0xfb, 0x9d, 0xc7, 0xf2, 0x53, 0xe2, 0xb1, 0xea, 0xc9, 0xe3, 0xb1,
	0xa6, 0x6c, 0xe5, 0x06, 0x9b, 0xcf, 0x61, 0x23, 0xe6, 0xc7, 0xce, 0xd4, 0x5e, 0xf5, 0x6e, 0x7b,
	0x9a, 0xb2, 0x95, 0x1f, 0x4d, 0x0d, 0x7a, 0x39, 0x83, 0xb5, 0x2f, 0x64, 0x30, 0x37, 0xda, 0x3c,
	0x86, 0x76, 0xcc, 0x0e, 0x85, 0xa9, 0xbd, 0x3a, 0xb3, 0xf7, 0xc1, 0x0a, 0x7b, 0x9a, 0xae, 0x95,
	0x1b, 0x4b, 0xad, 0x79, 0xba, 0xb5, 0xc6, 0x17, 0xb1, 0xa6, 0x8f, 0x35, 0x7f, 0x01, 0x5d, 0x9b,
	0x15, 0x3d, 0xe1, 0xf3, 0xbe, 0xb0, 0xd9, 0x64, 0x36, 0xbf, 0xbb, 0xc2, 0x26, 0xaf, 0x93, 0x47,
	0xfb, 0x12, 0xb0, 0x96, 0x1a, 0x31, 0x5f, 0x82, 0xe9, 0x9d, 0x79, 0x76, 0xce, 0x34, 0x30, 0xd3,
	0xdf, 0x5f, 0x61, 0xfa, 0x38, 0xb0, 0x91, 0x3a, 0x28, 0x9d, 0x62, 0x89, 0x29, 0xf3, 0x12, 0xcc,
	0xb8, 0x38, 0xc1, 0x1a, 0x9b, 0x60, 0x77, 0xc5, 0x04, 0xe7, 0x98, 0xcc, 0x5d, 0x7f, 0xc5, 0x1c,
	0x45, 0x6b, 0x9b, 0x7f, 0xae, 0x40, 0x5b, 0xa7, 0xe0, 0x9d, 0xa7, 0x9e, 0xb4, 0xa8, 0x94, 0xd4,
	0xa2, 0xd2, 0x85, 0xea, 0xab, 0x04, 0x5d, 0xc9, 0x2a, 0xc4, 0x05, 0x9a, 0x63, 0x31, 0x9e, 0x87,
	0x34, 0x31, 0x12, 0x82, 0x45, 0x19, 0x52, 0x21, 0x9a, 0x63, 0x37, 0xd8, 0x9d, 0xce, 0x62, 0xf9,
	0xb3, 0xcc, 0x25, 0x5a, 0x54, 0x43, 0xf6, 0x13, 0x7c, 0x9a, 0xcc, 0xe5, 0xcf, 0x72, 0x0a, 0x50,
	0xff, 0xdc, 0x68, 0xec, 0x61, 0x1c, 0x2e, 0x44, 0xd5, 0x4e, 0xe5, 0x37, 0x2d, 0x36, 0xfe, 0x54,
	0x2d, 0x36, 0xfe, 0xf4, 0xb5, 0x8b, 0x4d, 0x17, 0xaa, 0x71, 0x90, 0xd8, 0x33, 0x56, 0x6d, 0x5a,
	0x16, 0x17, 0xe8, 0xe8, 0x70, 0x16, 0xc4, 0x41, 0x84, 0xfd, 0xc8, 0x8d, 0xdd, 0x6b, 0xdc, 0x6b,
	0xf1, 0xd1, 0x3a, 0x6a, 0x7e, 0x0f, 0xde, 0xc1, 0x73, 0x4c, 0xa6, 0xd4, 0xd4, 0x31, 0x5d, 0x39,
	0x75, 0xa4, 0xcd, 0x54, 0x8b, 0x1d, 0x2c, 0x5a, 0xee, 0xc4, 0x1d, 0x84, 0xbd, 0x0d, 0x11, 0x2d,
	0x26, 0x15, 0x4b, 0x7a, 0xe7, 0xb5, 0x4a, 0xfa, 0x3b, 0xaf, 0x55, 0xd2, 0xcd, 0x65, 0x25, 0x5d,
	0x96, 0xd8, 0x7b, 0x59, 0x89, 0xdd, 0xfc, 0x8c, 0x12, 0x49, 0xaf, 0x0c, 0x9b, 0xd0, 0x88, 0x18,
	0x92, 0x11, 0x49, 0xca, 0x8c, 0x64, 0xee, 0xce, 0x0b, 0xe4, 0x25, 0x58, 0x9e, 0xf3, 0xa4, 0xcc,
	0xfb, 0x76, 0x79, 0x5f, 0x59, 0xf6, 0x71, 0xd9, 0xec, 0x40, 0xd9, 0x71, 0xf7, 0xc4, 0x99, 0x80,
	0x36, 0x39, 0xb2, 0x2f, 0x18, 0x44, 0x9b, 0x1c, 0x79, 0x22, 0x88, 0x43, 0x9b, 0x1c, 0x79, 0x2a,
	0xd8, 0x42, 0x9b, 0x79, 0x72, 0x36, 0x8a, 0xe4, 0xa4, 0x27, 0x51, 0xe9, 0x61, 0x53, 0x9c, 0x44,
	0x15, 0x0f, 0x91, 0xf4, 0x10, 0x64, 0xdf, 0xae, 0xd2, 0xb7, 0xc7, 0xfb, 0xd6, 0x64, 0xdf, 0x9e,
	0xd2, 0xb7, 0xcf, 0xfb, 0xd6, 0x65, 0x1f, 0x97, 0xd9, 0xe9, 0xd6, 0x1d, 0x5f, 0xf0, 0xce, 0x96,
	0x38, 0xdd, 0x4a, 0x20, 0x4b, 0xbc, 0x76, 0x2e, 0xf1, 0x42, 0x82, 0xa3, 0x48, 0x30, 0x82, 0x0b,
	0x74, 0x7b, 0x08, 0x8e, 0x76, 0x18, 0x0f, 0x5a, 0x16, 0x6b, 0x0b, 0x6c, 0x97, 0xed, 0x3a, 0xc7,
	0x76, 0x05, 0xb6, 0xc7, 0xf6, 0x98, 0x63, 0x7b, 0x02, 0xdb, 0x67, 0x5b, 0xcb, 0xb1, 0x7d, 0x81,
	0x3d, 0xe9, 0x75, 0x53, 0xec, 0x89, 0xc0, 0x9e, 0xf6, 0xde, 0x4d, 0xb1, 0xa7, 0x29, 0x2d, 0xee,
	0x2b, 0xb4, 0xf8, 0x47, 0x1d, 0x5a, 0x7a, 0x4d, 0xee, 0x41, 0x3d, 0xa4, 0x40, 0x4a, 0x0a, 0x29,
	0xd2, 0xb4, 0xb9, 0x44, 0x71, 0x8c, 0xc9, 0xe2, 0x45, 0xe0, 0xc5, 0x68, 0x2a, 0x99, 0x91, 0x43,
	0xd9, 0xa1, 0xd8, 0x41, 0x21, 0xfd, 0xd6, 0x15, 0x7a, 0x65, 0x71, 0x28, 0xd6, 0x50, 0xfa, 0xd5,
	0xef, 0xd8, 0xe2, 0x84, 0x4c, 0x27, 0xc7, 0xdb, 0x82, 0x37, 0x79, 0xb8, 0xa8, 0xb9, 0x23, 0xf8,
	0x94, 0x87, 0x8b, 0x9a, 0xbb, 0xf2, 0x26, 0x21, 0x07, 0x17, 0x35, 0xf7, 0x04, 0xff, 0xf2, 0x70,
	0x51, 0x73, 0x5f, 0x54, 0xaf, 0x3c, 0x5c, 0xd4, 0x7c, 0x22, 0xa8, 0x99, 0x87, 0x8b, 0x9a, 0x4f,
	0x05, 0x51, 0xf3, 0x70, 0x51, 0xf3, 0x07, 0x82, 0xb6, 0x79, 0xb8, 0xa8, 0xf9, 0x43, 0x41, 0xe2,
	0x3c, 0x5c, 0xd4, 0xfc, 0x91, 0x60, 0x74, 0x1e, 0x36, 0x3f, 0x84, 0x4e, 0x2e, 0xc4, 0xdb, 0xa2,
	0x02, 0x16, 0xf0, 0x25, 0xba, 0x3b, 0x82, 0xf8, 0x05, 0x7c, 0x89, 0xee, 0xae, 0xc8, 0x87, 0x02,
	0xbe, 0x44, 0x77, 0x4f, 0xe4, 0x49, 0x01, 0x5f, 0xa2, 0xbb, 0x2f, 0xf2, 0xa7, 0x80, 0x2f, 0xd1,
	0x7d, 0x22, 0xf2, 0xaa, 0x80, 0xb3, 0x5b, 0x0d, 0x41, 0xe6, 0xae, 0xb8, 0xd5, 0x10, 0x2c, 0xee,
	0x41, 0x5d, 0x7c, 0x1f, 0x89, 0x64, 0x93, 0x22, 0xab, 0x26, 0xb6, 0x38, 0x15, 0xdc, 0x17, 0xd5,
	0xc4, 0xce, 0xbe, 0x6f, 0x42, 0x12, 0xc4, 0xd8, 0x96, 0x9f, 0x48, 0x5f, 0xe7, 0xdf, 0x37, 0x1a,
	0x98, 0x56, 0x8a, 0xde, 0x92, 0x4a, 0xf1, 0x8d, 0x25, 0x95, 0x62, 0x53, 0xaf, 0x14, 0x2c, 0xdb,
	0xdf, 0x53, 0xb2, 0xfd, 0x37, 0x15, 0xe8, 0xe4, 0x4f, 0x4f, 0x6f, 0x7f, 0x06, 0xde, 0xfe, 0x0c,
	0x6c, 0x7e, 0x56, 0x86, 0xde, 0xaa, 0xb3, 0xef, 0x9d, 0x04, 0xe9, 0x42, 0x75, 0x96, 0xcc, 0x91,
	0x2f, 0xd8, 0xc1, 0x85, 0xfc, 0xb6, 0x95, 0x97, 0x6f, 0x9b, 0xad, 0x7c, 0x80, 0xa9, 0xb9, 0xc1,
	0x68, 0xb0, 0x9d, 0x51, 0x65, 0x9b, 0x23, 0x3b, 0x19, 0x55, 0x76, 0x38, 0xb2, 0x9b, 0x51, 0x65,
	0x57, 0x52, 0xae, 0x51, 0xa0, 0x5c, 0x33, 0xa3, 0xdc, 0x03, 0x00, 0x7a, 0x28, 0x3b, 0xc4, 0xd7,
	0xf4, 0xe4, 0xca, 0x29, 0xa1, 0x20, 0x34, 0x97, 0x1d, 0x5b, 0xe5, 0x84, 0x14, 0x69, 0xbe, 0x8a,
	0x5f, 0x39, 0xe1, 0x34, 0xe7, 0x85, 0x0e, 0xa6, 0x5b, 0xda, 0x5a, 0xb2, 0xa5, 0xed, 0x25, 0x5b,
	0xba, 0xb1, 0x24, 0x5f, 0x3b, 0xca, 0xb6, 0xfc, 0xb6, 0x0c, 0xef, 0xdd, 0xf1, 0xc5, 0xf0, 0x76,
	0x67, 0xbe, 0xac, 0x9d, 0xe9, 0xff, 0xa9, 0x0e, 0x1b, 0xe2, 0xca, 0x3c, 0xdd, 0x8d, 0x55, 0xb7,
	0x44, 0xb9, 0xcb, 0x8c, 0x52, 0xf1, 0x32, 0xe3, 0x04, 0x5a, 0xe2, 0x02, 0x5d, 0xac, 0xa1, 0x9c,
	0xff, 0x00, 0xce, 0xcd, 0x25, 0x65, 0xf1, 0xe5, 0xa8, 0x8f, 0x36, 0x3f, 0x82, 0xb6, 0x27, 0x93,
	0x59, 0xbd, 0xe3, 0xf8, 0xf6, 0x6a, 0x7b, 0xa9, 0xaa, 0x95, 0x1b, 0x6a, 0x9e, 0xc0, 0x06, 0xc1,
	0xf3, 0x20, 0xc6, 0x99, 0xb5, 0xea, 0x56, 0xf9, 0x75, 0xad, 0xe5, 0xc7, 0x9a, 0x3f, 0x81, 0x75,
	0xfe, 0xb5, 0x9a, 0x5e, 0x6e, 0x50, 0x5b, 0x0f, 0x57, 0xdb, 0x3a, 0x54, 0xb4, 0x2d, 0x6d, 0xec,
	0xe6, 0xdf, 0x0d, 0x68, 0x69, 0x81, 0x50, 0x9f, 0x26, 0xe4, 0x2e, 0x64, 0x80, 0x72, 0xcd, 0xcc,
	0x3f, 0x8f, 0xe5, 0x35, 0xf3, 0x26, 0x34, 0xc2, 0xe4, 0xd2, 0x73, 0xed, 0x51, 0x28, 0x1e, 0x4c,
	0x52, 0x59, 0x7d, 0xce, 0xa8, 0x68, 0xcf, 0x19, 0xb4, 0x67, 0x8e, 0xe7, 0x13, 0x82, 0xf9, 0xad,
	0x75, 0xc5, 0x92, 0x22, 0xf5, 0xc2, 0x0b, 0x90, 0x73, 0x8c, 0xaf, 0xb1, 0xc7, 0x52, 0xa3, 0x64,
	0x65, 0x00, 0xf5, 0x22, 0x09, 0x95, 0xe7, 0x2b, 0x21, 0xa5, 0x34, 0x6b, 0x28, 0x05, 0x20, 0x81,
	0x66, 0x16, 0xba, 0xfb, 0x50, 0x0b, 0x3d, 0xfb, 0x04, 0xd9, 0x92, 0x5f, 0x5c, 0x5a, 0xb9, 0xac,
	0x1e, 0xd4, 0x5f, 0x25, 0xc8, 0x73, 0xe3, 0x85, 0x7c, 0x89, 0x11, 0xa2, 0xd9, 0x86, 0x12, 0x91,
	0x8f, 0xc9, 0x25, 0xc2, 0xde, 0x90, 0xe3, 0x5b, 0x91, 0xd6, 0xa5, 0xf8, 0x76, 0xf3, 0xaf, 0xe9,
	0xd3, 0x76, 0x16, 0x57, 0x1e, 0xf9, 0x6c, 0xf6, 0x0c, 0xc8, 0x5d, 0x75, 0x72, 0x27, 0xd4, 0xab,
	0xce, 0xcc, 0xc1, 0xb2, 0xe6, 0xa0, 0x09, 0x15, 0x1f, 0x89, 0x77, 0x98, 0xa6, 0xc5, 0xda, 0xcb,
	0x9e, 0xb3, 0x23, 0xec, 0x3b, 0x2c, 0x8c, 0x15, 0x8b, 0xb5, 0xe9, 0xc2, 0x08, 0xb6, 0x31, 0xfd,
	0x70, 0xe7, 0x21, 0x94, 0x22, 0x1d, 0x9d, 0x84, 0x22, 0x82, 0xa5, 0x84, 0x8d, 0x76, 0x82, 0x1b,
	0x9f, 0x55, 0x9a, 0x8a, 0xc5, 0xda, 0xfd, 0x3f, 0x1a, 0xd0, 0xe1, 0x57, 0x2a, 0x03, 0xe7, 0x1a,
	0x93, 0x78, 0x3c, 0x0b, 0xe2, 0xbb, 0x6e, 0x78, 0xf9, 0x8d, 0x5f, 0x76, 0xc3, 0x2b, 0x65, 0xb3,
	0x0f, 0xeb, 0xa1, 0x87, 0x16, 0x97, 0xae, 0xe7, 0xb1, 0x27, 0x4b, 0x4e, 0x1d, 0x0d, 0x63, 0x6f,
	0x86, 0x28, 0xc6, 0xc4, 0x45, 0x5e, 0xfa, 0x38, 0xda, 0xb4, 0x34, 0x8c, 0x56, 0xc3, 0x84, 0x78,
	0x62, 0xcd, 0xb4, 0x99, 0x52, 0xa1, 0xa6, 0x54, 0x9c, 0x5f, 0xc2, 0xbb, 0xaa, 0xd7, 0x67, 0x1e,
	0x5a, 0x1c, 0x04, 0x89, 0x1f, 0x17, 0xdc, 0x30, 0x5e, 0xc3, 0x8d, 0xd2, 0x12, 0x37, 0xde, 0x87,
	0x66, 0x28, 0x8d, 0xca, 0xe7, 0x9b, 0x14, 0xe8, 0x7f, 0x6e, 0x40, 0x37, 0x3f, 0x3f, 0x25, 0xc7,
	0x1b, 0x45, 0x6e, 0x08, 0xad, 0xd4, 0xf2, 0xb1, 0x1b, 0xd1, 0xe9, 0x68, 0x15, 0xf8, 0x66, 0x56,
	0x05, 0x96, 0x2e, 0xd5, 0xd2, 0x47, 0x2d, 0x7d, 0xc7, 0xfb, 0xdc, 0x80, 0x8d, 0x21, 0x9a, 0x6a,
	0x7f, 0xcc, 0xb8, 0xeb, 0xc6, 0xac, 0xc8, 0x5d, 0xfd, 0x9a, 0x9e, 0xf3, 0xb1, 0x5c, 0xf8, 0x7b,
	0x45, 0x65, 0xf9, 0xdf, 0x2b, 0xaa, 0x2b, 0x1f, 0x9d, 0x6a, 0xfa, 0xa3, 0x13, 0x62, 0x2f, 0xc0,
	0x43, 0x34, 0xd5, 0x5f, 0x5c, 0x1f, 0xc1, 0xc6, 0xc4, 0x25, 0x73, 0xf1, 0xdc, 0x9b, 0xfe, 0x85,
	0xa5, 0x69, 0xe5, 0x61, 0xfa, 0xab, 0xa2, 0x3c, 0x8e, 0xcb, 0x97, 0x60, 0x05, 0xea, 0x3f, 0x86,
	0x4e, 0x16, 0x09, 0xf1, 0xe4, 0x7a, 0x47, 0x28, 0x3e, 0x8c, 0x60, 0xe3, 0xf9, 0xe9, 0xf1, 0xe8,
	0x74, 0xf8, 0x72, 0xf8, 0xb3, 0xf3, 0x97, 0xe7, 0x1f, 0x9f, 0x0d, 0xcd, 0x35, 0xa8, 0xff, 0xf4,
	0xf4, 0xa3, 0xd3, 0xe7, 0x17, 0xa7, 0x9d, 0xaf, 0x51, 0xe1, 0x70, 0x70, 0x3e, 0x38, 0x39, 0xb2,
	0x3a, 0x86, 0x09, 0x50, 0x1b, 0x8f, 0x8e, 0x4e, 0x07, 0xc7, 0x9d, 0x92, 0xd9, 0x84, 0xea, 0xd9,
	0xf3, 0x8b, 0xa1, 0xd5, 0x29, 0x33, 0xf8, 0xc0, 0x1a, 0x0e, 0x4f, 0x3b, 0x15, 0xda, 0x3e, 0x18,
	0x9c, 0x0c, 0xad, 0x41, 0xa7, 0x4a, 0xc7, 0x1e, 0x0d, 0xce, 0x87, 0x17, 0x83, 0x8f, 0x3b, 0x35,
	0xda, 0x31, 0x1c, 0x1c, 0x1d, 0x0e, 0x5f, 0x74, 0xea, 0x97, 0x35, 0xf6, 0x47, 0x9e, 0xbd, 0xff,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x53, 0xbb, 0xca, 0xd7, 0x23, 0x00, 0x00,
}